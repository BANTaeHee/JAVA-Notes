1. 의미
    1) 어떤 조건이 성립되는 동안 반복 처리를 실행하는 제어문임.
    2) for문을 이용한 반복
       while문을 이용한 반복
       do~while문을 이용한 반복

2. for문 
    1) for문의 수행 순서 
                ①      ②      ④
        for(초기화식; 조건식; 증감식) {
                  ③  
                수행문;
                .....
        }      

            - 첫번째 루프의 흐름
                -  ① => ② => ③ => ④
            - 두번째 루프의 흐름
                -  ② => ③ => ④                
            - 세번째 루프의 흐름
                -  ② => ③ => ④   

    2) for문 요소의 생략, 응용

    3) 중첩 반복문
        - 반복문이 여러 번 포개진 중첩 반복
        - 반복문 내부에 또 다른 반복문이 있음
        - 여러 겹으로 반복문을 겹쳐서 구현 가능
        - 외부 반복문과 내부 반복문 간의 변수 값 변화에 유의하여 구현해야함.

3. break문, continue문
    1) break문
        - 중간에 멈춤
        - 감싸고 있는 제어문의 블록을 빠져 나오는 기능 
        - 반복문에서
            - 주로 조건문(if)와 같이 사용
            - 조건에 해당되는 경우 반복 수행 멈추고 
            - 반복문 외부로 수행이 이동.

            - 중첩 반복문에서는 break문이 포함된 반복문만 빠져나옴.
    2) continue문
        - 반복문 내부에서 조건문(if)과 같이 사용하며,
        - 조건을 만족하는 경우 (true)
            - 이후 반복문 블럭 내부의 다른 수행문들을 미수행함.            

4. while문 
    1) 주어진 조건이 참(true)인 동안 수행문을 반복 수행하는 제어문.
    2) 조건이 만족하지 않으면 반복하던 수행을 멈춤.
    3) 예
        - 달리는 자동차, 회전하는 나사못, 특정온도까지 가동되는 에어컨.
    4) 
        while(조건식) {
            수행문1;
            ...
        }      
        수행문2;  

5. do~while문 
    1) 조건과 상관없이 한번은 수행문을 수행
    2) 조건과 상관없이 수행을 한번 하고나서 조건을 체크함
    3) 
        do {
            수행문1;
            ...            
        } while(조건식);
        수행문2;  
        ...



